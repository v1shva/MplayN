{
  "_args": [
    [
      {
        "raw": "@google-cloud/storage@~1.1.0",
        "scope": "@google-cloud",
        "escapedName": "@google-cloud%2fstorage",
        "name": "@google-cloud/storage",
        "rawSpec": "~1.1.0",
        "spec": ">=1.1.0 <1.2.0",
        "type": "range"
      },
      "D:\\UCSC\\3rdYearPrjct\\Mplay"
    ]
  ],
  "_from": "@google-cloud/storage@>=1.1.0 <1.2.0",
  "_id": "@google-cloud/storage@1.1.1",
  "_inCache": true,
  "_location": "/@google-cloud/storage",
  "_nodeVersion": "7.2.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/storage-1.1.1.tgz_1494703178950_0.6627092722337693"
  },
  "_npmUser": {
    "name": "stephenplusplus",
    "email": "sawchuk@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@google-cloud/storage@~1.1.0",
    "scope": "@google-cloud",
    "escapedName": "@google-cloud%2fstorage",
    "name": "@google-cloud/storage",
    "rawSpec": "~1.1.0",
    "spec": ">=1.1.0 <1.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@google-cloud/storage/-/storage-1.1.1.tgz",
  "_shasum": "6590b5ce6e779556c9cc7043bd6449d6bc0781de",
  "_shrinkwrap": null,
  "_spec": "@google-cloud/storage@~1.1.0",
  "_where": "D:\\UCSC\\3rdYearPrjct\\Mplay",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/googlecloudplatform/google-cloud-node/issues"
  },
  "contributors": [
    {
      "name": "Burcu Dogan",
      "email": "jbd@google.com"
    },
    {
      "name": "Johan Euphrosine",
      "email": "proppy@google.com"
    },
    {
      "name": "Patrick Costello",
      "email": "pcostell@google.com"
    },
    {
      "name": "Ryan Seys",
      "email": "ryan@ryanseys.com"
    },
    {
      "name": "Silvano Luciani",
      "email": "silvano@google.com"
    },
    {
      "name": "Stephen Sawchuk",
      "email": "sawchuk@gmail.com"
    }
  ],
  "dependencies": {
    "@google-cloud/common": "^0.13.0",
    "arrify": "^1.0.0",
    "async": "^2.0.1",
    "concat-stream": "^1.5.0",
    "create-error-class": "^3.0.2",
    "duplexify": "^3.2.0",
    "extend": "^3.0.0",
    "gcs-resumable-upload": "^0.7.1",
    "hash-stream-validation": "^0.2.1",
    "is": "^3.0.1",
    "mime-types": "^2.0.8",
    "once": "^1.3.1",
    "pumpify": "^1.3.3",
    "stream-events": "^1.0.1",
    "string-format-obj": "^1.0.0",
    "through2": "^2.0.0"
  },
  "description": "Cloud Storage Client Library for Node.js",
  "devDependencies": {
    "mocha": "^3.0.1",
    "normalize-newline": "^2.0.0",
    "prop-assign": "^1.0.0",
    "propprop": "^0.3.0",
    "proxyquire": "^1.7.10",
    "request": "^2.70.0",
    "tmp": "^0.0.31",
    "uuid": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "6590b5ce6e779556c9cc7043bd6449d6bc0781de",
    "tarball": "https://registry.npmjs.org/@google-cloud/storage/-/storage-1.1.1.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "src",
    "AUTHORS",
    "CONTRIBUTORS",
    "COPYING"
  ],
  "homepage": "https://github.com/googlecloudplatform/google-cloud-node#readme",
  "keywords": [
    "google apis client",
    "google api client",
    "google apis",
    "google api",
    "google",
    "google cloud platform",
    "google cloud",
    "cloud",
    "google storage",
    "storage"
  ],
  "license": "Apache-2.0",
  "main": "./src/index.js",
  "maintainers": [
    {
      "name": "callmehiphop",
      "email": "callmehiphop@gmail.com"
    },
    {
      "name": "dominicdkramer",
      "email": "dominicdkramer@google.com"
    },
    {
      "name": "google-admin",
      "email": "github-admin@google.com"
    },
    {
      "name": "google-cloud-admin",
      "email": "google-cloud@google.com"
    },
    {
      "name": "jdobry",
      "email": "jason.dobry@gmail.com"
    },
    {
      "name": "jgeewax",
      "email": "jj@geewax.org"
    },
    {
      "name": "justinbeckwith",
      "email": "justin.beckwith@gmail.com"
    },
    {
      "name": "kjin",
      "email": "kelvinjin@google.com"
    },
    {
      "name": "lukesneeringer",
      "email": "luke@sneeringer.com"
    },
    {
      "name": "matthewloring",
      "email": "mattloring@google.com"
    },
    {
      "name": "ofrobots",
      "email": "ofrobots@google.com"
    },
    {
      "name": "stephenplusplus",
      "email": "sawchuk@gmail.com"
    }
  ],
  "name": "@google-cloud/storage",
  "optionalDependencies": {},
  "readme": "# @google-cloud/storage ([GA][versioning])\r\n> Cloud Storage Client Library for Node.js\r\n\r\n*Looking for more Google APIs than just Storage? You might want to check out [`google-cloud`][google-cloud].*\r\n\r\n- [API Documentation][gcloud-storage-docs]\r\n- [Official Documentation][cloud-storage-docs]\r\n\r\n\r\n```sh\r\n$ npm install --save @google-cloud/storage\r\n```\r\n```js\r\nvar fs = require('fs');\r\n\r\nvar gcs = require('@google-cloud/storage')({\r\n  projectId: 'grape-spaceship-123',\r\n  keyFilename: '/path/to/keyfile.json'\r\n});\r\n\r\n// Create a new bucket.\r\ngcs.createBucket('my-new-bucket', function(err, bucket) {\r\n  if (!err) {\r\n    // \"my-new-bucket\" was successfully created.\r\n  }\r\n});\r\n\r\n// Reference an existing bucket.\r\nvar bucket = gcs.bucket('my-existing-bucket');\r\n\r\n// Upload a local file to a new file to be created in your bucket.\r\nbucket.upload('/photos/zoo/zebra.jpg', function(err, file) {\r\n  if (!err) {\r\n    // \"zebra.jpg\" is now in your bucket.\r\n  }\r\n});\r\n\r\n// Download a file from your bucket.\r\nbucket.file('giraffe.jpg').download({\r\n  destination: '/photos/zoo/giraffe.jpg'\r\n}, function(err) {});\r\n\r\n// Streams are also supported for reading and writing files.\r\nvar remoteReadStream = bucket.file('giraffe.jpg').createReadStream();\r\nvar localWriteStream = fs.createWriteStream('/photos/zoo/giraffe.jpg');\r\nremoteReadStream.pipe(localWriteStream);\r\n\r\nvar localReadStream = fs.createReadStream('/photos/zoo/zebra.jpg');\r\nvar remoteWriteStream = bucket.file('zebra.jpg').createWriteStream();\r\nlocalReadStream.pipe(remoteWriteStream);\r\n\r\n// Promises are also supported by omitting callbacks.\r\nbucket.upload('/photos/zoo/zebra.jpg').then(function(data) {\r\n  var file = data[0];\r\n});\r\n\r\n// It's also possible to integrate with third-party Promise libraries.\r\nvar gcs = require('@google-cloud/storage')({\r\n  promise: require('bluebird')\r\n});\r\n```\r\n\r\n\r\n## Authentication\r\n\r\nIt's incredibly easy to get authenticated and start using Google's APIs. You can set your credentials on a global basis as well as on a per-API basis. See each individual API section below to see how you can auth on a per-API-basis. This is useful if you want to use different accounts for different Cloud services.\r\n\r\n### On Google Cloud Platform\r\n\r\nIf you are running this client on Google Cloud Platform, we handle authentication for you with no configuration. You just need to make sure that when you [set up the GCE instance][gce-how-to], you add the correct scopes for the APIs you want to access.\r\n\r\n``` js\r\nvar gcs = require('@google-cloud/storage')();\r\n// ...you're good to go!\r\n```\r\n\r\n### Elsewhere\r\n\r\nIf you are not running this client on Google Cloud Platform, you need a Google Developers service account. To create a service account:\r\n\r\n1. Visit the [Google Developers Console][dev-console].\r\n2. Create a new project or click on an existing project.\r\n3. Navigate to  **APIs & auth** > **APIs section** and turn on the following APIs (you may need to enable billing in order to use these services):\r\n  * Google Cloud Storage\r\n  * Google Cloud Storage JSON API\r\n4. Navigate to **APIs & auth** >  **Credentials** and then:\r\n  * If you want to use a new service account key, click on **Create credentials** and select **Service account key**. After the account key is created, you will be prompted to download the JSON key file that the library uses to authenticate your requests.\r\n  * If you want to generate a new service account key for an existing service account, click on **Generate new JSON key** and download the JSON key file.\r\n\r\n``` js\r\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\r\n\r\nvar gcs = require('@google-cloud/storage')({\r\n  projectId: projectId,\r\n\r\n  // The path to your key file:\r\n  keyFilename: '/path/to/keyfile.json'\r\n\r\n  // Or the contents of the key file:\r\n  credentials: require('./path/to/keyfile.json')\r\n});\r\n\r\n// ...you're good to go!\r\n```\r\n\r\n\r\n[versioning]: https://github.com/GoogleCloudPlatform/google-cloud-node#versioning\r\n[google-cloud]: https://github.com/GoogleCloudPlatform/google-cloud-node/\r\n[gce-how-to]: https://cloud.google.com/compute/docs/authentication#using\r\n[dev-console]: https://console.developers.google.com/project\r\n[gcloud-storage-docs]: https://googlecloudplatform.github.io/google-cloud-node/#/docs/storage\r\n[cloud-storage-docs]: https://cloud.google.com/storage/docs/overview\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googlecloudplatform/google-cloud-node.git"
  },
  "scripts": {
    "publish-module": "node ../../scripts/publish.js storage",
    "system-test": "mocha system-test/*.js --no-timeouts --bail",
    "test": "mocha test/*.js"
  },
  "version": "1.1.1"
}
